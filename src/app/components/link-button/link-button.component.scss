@use "../../../styles" as layout;
@import "../../../breakpoints.scss";

.status-report-button-container:has(#status-report-onboarding-container:not(.onboarding-hidden)) {
  position: relative;
  &>#status-report-onboarding-container {
    cursor: default !important;
    color: white;
    font-family: "Roboto", serif;
    padding: 0 4px;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    &>*:is(span, mat-icon) {
      font-size: 14px;
      line-height: 14px;
      &:is(mat-icon) {
        transform: translate(7px, 7px);
      }
    }
    display: flex;
    align-items: center;
    position: absolute;
    white-space: nowrap;
    top: 0;
    left: 0;
    transform: translate(calc(-100% + 38px), calc(-100% - 4px));
    background: rgba(grey, 1);
    border-radius: 4px;
  }
}

button.mdc-button {
  border-radius: 10px;
  font-size: 24px;
}
.wrapper {
  display: grid;
  grid-template-columns: 1fr auto;
  grid-column-gap: 8px;
  & button>mat-icon {
    $icon-size: 40px;
    height: $icon-size;
    width: $icon-size;
    font-size: $icon-size;
    transform: translate(-8px, -8px); // Return to center locally within context of `button`
  }
  $image-size: 38px;
  &::ng-deep .mdc-button__label {
    width: 100%;
  }
  &::ng-deep .link-button-content {
    container-type: inline-size;
    container-name: button-content-long;
    &.short-content {
      container-name: button-content-short;
    }
    &>div:first-child {
      &>*:first-child {
        height: 38px;
        &>img {
          height: 100%;
        }
      }
      display: grid;
      grid-template-columns: 38px 1fr 38px;
    }
  }
}

@mixin set-grid($grid-template-columns, $hide-icon: 0, $hide-label: 0) {
  :host::ng-deep .link-button-content>div {
    grid-template-columns: $grid-template-columns !important;
    @if($hide-icon != 0) {
      &>*:is(:first-child,:last-child) {
        display: none;
      }
    } @else if($hide-label != 0) {
      &>*:first-child {
        display: block !important;
        justify-self: center;
      }
      &>*:is(:nth-child(2),:last-child) {
        display: none;
      }
    }
  }
}

@container button-content-short (width <= 190px) {
  @include set-grid(1fr, $hide-icon: 1);
}

@container button-content-short (width <= 140px) {
  @include set-grid(1fr, $hide-label: 1);
}

@container button-content-long (width <= 250px) {
  @include set-grid(1fr, $hide-icon: 1);
}

@container button-content-long (width <= 140px) {
  @include set-grid(1fr, $hide-label: 1);
}
